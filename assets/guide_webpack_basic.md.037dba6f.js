import{_ as s,c as a,o as n,a as e}from"./app.12fb37af.js";const p="/assets/webpackChunkName.15f4df1f.png",o="/assets/npm-list.779d18e9.png",l="/assets/npm-list-info.7f54ee4b.png",D=JSON.parse('{"title":"基础","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/webpack/basic.md"}'),c={name:"guide/webpack/basic.md"},t=e('<h1 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-hidden="true">#</a></h1><h2 id="webpackchunkname" tabindex="-1">webpackChunkName <a class="header-anchor" href="#webpackchunkname" aria-hidden="true">#</a></h2><p><code>webpackChunkName</code> 是为预加载的文件取别名，作用就是 <code>webpack</code> 在打包的时候，对异步引入的库代码（ eg: <code>lodash</code> ）进行代码分割时（需要配置 <code>webpack</code> 的 <code>SplitChunkPlugin</code> 插件），为分割后的代码块取得名字</p><p><code>import</code> 异步加载的写法实现页面模块 <code>lazy loading</code> 懒加载（ <code>Vue</code> 中的路由异步加载）：</p><p><code>Vue</code> 中运用 <code>import</code> 的懒加载语句以及 <code>webpack</code> 的魔法注释，在项目进行 <code>webpack</code> 打包的时候，对不同模块进行代码分割，在首屏加载时，用到哪个模块再加载哪个模块，实现懒加载进行页面的优化</p><p><img src="'+p+`" alt="webpackChunkName"></p><h2 id="npm" tabindex="-1">npm <a class="header-anchor" href="#npm" aria-hidden="true">#</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看全局安装的模块</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ls</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看全局安装的模块的详细信息(name, description, version number, github address, official website.)</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ls</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-l</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装到 \`devDependencies\` 中</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dayjs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-S</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装到 \`dependencies\` 中</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dayjs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span>
<span class="line"></span></code></pre></div><p><img src="`+o+'" alt="npm-list"></p><p><img src="'+l+'" alt="npm-list-info"></p>',10),r=[t];function i(d,C,y,h,m,A){return n(),a("div",null,r)}const u=s(c,[["render",i]]);export{D as __pageData,u as default};
