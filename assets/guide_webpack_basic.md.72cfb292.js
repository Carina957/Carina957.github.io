import{_ as e,c,o as a,a as o}from"./app.71c97d91.js";const d="/assets/webpackChunkName.15f4df1f.png",b=JSON.parse('{"title":"基础","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/webpack/basic.md"}'),t={name:"guide/webpack/basic.md"},n=o('<h1 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-hidden="true">#</a></h1><h2 id="webpackchunkname" tabindex="-1">webpackChunkName <a class="header-anchor" href="#webpackchunkname" aria-hidden="true">#</a></h2><p><code>webpackChunkName</code> 是为预加载的文件取别名，作用就是 <code>webpack</code> 在打包的时候，对异步引入的库代码（ eg: <code>lodash</code> ）进行代码分割时（需要配置 <code>webpack</code> 的 <code>SplitChunkPlugin</code> 插件），为分割后的代码块取得名字</p><p><code>import</code> 异步加载的写法实现页面模块 <code>lazy loading</code> 懒加载（ <code>Vue</code> 中的路由异步加载）：</p><p><code>Vue</code> 中运用 <code>import</code> 的懒加载语句以及 <code>webpack</code> 的魔法注释，在项目进行 <code>webpack</code> 打包的时候，对不同模块进行代码分割，在首屏加载时，用到哪个模块再加载哪个模块，实现懒加载进行页面的优化</p><p><img src="'+d+'" alt="webpackChunkName"></p>',6),p=[n];function s(i,r,_,h,k,u){return a(),c("div",null,p)}const l=e(t,[["render",s]]);export{b as __pageData,l as default};
