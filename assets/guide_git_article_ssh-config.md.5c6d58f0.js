import{_ as s,c as a,o as n,V as l}from"./chunks/framework.c64951c7.js";const d=JSON.parse('{"title":"SSH config","description":"","frontmatter":{},"headers":[],"relativePath":"guide/git/article/ssh-config.md"}'),o={name:"guide/git/article/ssh-config.md"},p=l(`<h1 id="ssh-config" tabindex="-1">SSH config <a class="header-anchor" href="#ssh-config" aria-label="Permalink to &quot;SSH config&quot;">​</a></h1><p>使用 SSH 协议可以连接远程服务器和服务并向它们验证。 利用 SSH 密钥可以连接到 GitHub，而无需在每次访问时都提供用户名和 personal access token。还可以使用 SSH 密钥对提交进行签名。</p><h2 id="生成新的-ssh-密钥" tabindex="-1"><a href="https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key" target="_blank" rel="noreferrer">生成新的 SSH 密钥</a> <a class="header-anchor" href="#生成新的-ssh-密钥" aria-label="Permalink to &quot;[生成新的 SSH 密钥](https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key)&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ssh-keygen</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ed25519</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-C</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your_email@example.com</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Tips: 如果你使用的是不支持 <code>Ed25519</code> 算法的旧系统，请使用以下命令：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ssh-keygen</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rsa</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4096</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-C</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your_email@example.com</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div></div><h2 id="将-ssh-密钥添加到-ssh-agent" tabindex="-1">将 SSH 密钥添加到 ssh-agent <a class="header-anchor" href="#将-ssh-密钥添加到-ssh-agent" aria-label="Permalink to &quot;将 SSH 密钥添加到 ssh-agent&quot;">​</a></h2><ol><li><p>确保 ssh-agent 正在运行。</p><details class="details custom-block"><summary>或者你可以考虑自启动 <code>ssh-agent</code></summary><p>在 Git for Windows 上自启动 ssh-agent</p><p>可以在打开 bash 或 Git shell 时自动运行 ssh-agent。 复制以下行并将其粘贴到 Git shell 中的 ~/.profile 或 ~/.bashrc 文件中：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">env</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">~/.ssh/agent.env</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">agent_load_env</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">test</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">.</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">/dev/null</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">agent_start</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">umask</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">077</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ssh-agent</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">&quot;</span><span style="color:#BABED8;">$env</span><span style="color:#FFCB6B;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">.</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">/dev/null</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">agent_load_env</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running</span></span>
<span class="line"><span style="color:#BABED8;">agent_run_state</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">ssh-add</span><span style="color:#C3E88D;"> -l </span><span style="color:#89DDFF;">&gt;|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">/dev/null</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">2&gt;&amp;1;</span><span style="color:#C3E88D;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#C3E88D;"> </span><span style="color:#BABED8;">$?</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$SSH_AUTH_SOCK</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">||</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> $agent_run_state </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">agent_start</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">ssh-add</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">elif</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$SSH_AUTH_SOCK</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> $agent_run_state </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">ssh-add</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">unset</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">env</span></span></code></pre></div></details><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">eval</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;$(</span><span style="color:#FFCB6B;">ssh-agent</span><span style="color:#C3E88D;"> -s</span><span style="color:#89DDFF;">)&quot;</span></span></code></pre></div></li><li><p>将 SSH 私钥添加到 ssh-agent。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ssh-add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">~/.ssh/id_ed25519</span></span></code></pre></div></li></ol><h2 id="ssh-配置方式" tabindex="-1">SSH 配置方式 <a class="header-anchor" href="#ssh-配置方式" aria-label="Permalink to &quot;SSH 配置方式&quot;">​</a></h2><ul><li>命令行选项</li><li>用户配置文件 (~/.ssh/config)</li><li>系统配置文件 (/etc/ssh/ssh_config)</li></ul><p>配置文件可分为多个配置区段，每个配置区段使用 Host 来区分。我们可以在命令行中输入不同的 host 来加载不同的配置段。</p><p>对每一个配置项来说，首次获取的参数值将被采用，因此通用的设置应该放到文件的后面，特定 host 相关的配置项应放到文件的前面。</p><h2 id="常用配置项" tabindex="-1">常用配置项 <a class="header-anchor" href="#常用配置项" aria-label="Permalink to &quot;常用配置项&quot;">​</a></h2><ul><li>Host</li></ul><p>配置项标识了一个配置区段。</p><p><strong>配置项参数值可以使用通配符</strong>：* 代表 0 ～ n 个非空白字符， ? 代表一个非空白字符，! 表示例外通配。</p><p>eg: <code>Host *</code></p><ul><li>HostName</li></ul><p>指定远程主机名，可以直接使用数字 IP 地址。如果主机名中包含 <code>%h</code> ，则实际使用时会被命令行中的主机名替换。</p><ul><li><p>IdentityFile</p><p>指定密钥认证使用的私钥文件路径。默认为 <code>~/.ssh/id_dsa</code>, <code>~/.ssh/id_ecdsa</code>, <code>~/.ssh/id_ed25519</code> 或 <code>~/.ssh/id_rsa</code> 中的一个。</p><p>文件名称可以使用以下转义符：</p><ol><li>&#39;%d&#39; 本地用户目录</li><li>&#39;%u&#39; 本地用户名称</li><li>&#39;%l&#39; 本地主机名</li><li>&#39;%h&#39; 远程主机名</li><li>&#39;%r&#39; 远程用户名</li></ol><p>可以指定多个密钥文件，在连接的过程中会依次尝试这些密钥文件。</p></li><li><p>Port</p></li></ul><p>指定远程主机端口号，默认为 22 。</p><ul><li>User</li></ul><p>指定登录用户名。</p><ul><li>UserKnownHostsFile</li></ul><p>指定一个或多个用户认证主机缓存文件，用来缓存通过认证的远程主机的密钥，多个文件用空格分隔。默认缓存文件为： <code>~/.ssh/known_hosts</code>, <code>~/.ssh/known_hosts2</code>。</p><h2 id="检查-ssh-密钥是否生效" tabindex="-1">检查 SSH 密钥是否生效 <a class="header-anchor" href="#检查-ssh-密钥是否生效" aria-label="Permalink to &quot;检查 SSH 密钥是否生效&quot;">​</a></h2><div class="language-git"><button title="Copy Code" class="copy"></button><span class="lang">git</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">ssh -T git@github.com</span></span></code></pre></div><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">​</a></h2><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Host codeup.aliyun.com</span></span>
<span class="line"><span style="color:#babed8;">  HostName codeup.aliyun.com</span></span>
<span class="line"><span style="color:#babed8;">  Port 22</span></span>
<span class="line"><span style="color:#babed8;">  PreferredAuthentications publickey</span></span>
<span class="line"><span style="color:#babed8;">  IdentityFile ~/.ssh/codeup_user_ed25519</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Host github.com</span></span>
<span class="line"><span style="color:#babed8;">  HostName github.com</span></span>
<span class="line"><span style="color:#babed8;">  User git</span></span>
<span class="line"><span style="color:#babed8;">  Port 22</span></span>
<span class="line"><span style="color:#babed8;">  PreferredAuthentications publickey</span></span>
<span class="line"><span style="color:#babed8;">  IdentityFile ~/.ssh/chis_office</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Host github_io_deploy</span></span>
<span class="line"><span style="color:#babed8;">  HostName github.com</span></span>
<span class="line"><span style="color:#babed8;">  User git</span></span>
<span class="line"><span style="color:#babed8;">  Port 22</span></span>
<span class="line"><span style="color:#babed8;">  PreferredAuthentications publickey</span></span>
<span class="line"><span style="color:#babed8;">  IdentityFile ~/.ssh/github.io_deploy</span></span></code></pre></div>`,28),e=[p];function t(c,r,i,y,D,B){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
